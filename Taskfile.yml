version: '3'

tasks:
  default:
    desc: List all available tasks
    silent: true
    cmds:
      - task --list

  test:
    desc: Run all tests (unit + integration) with coverage - Docker required
    silent: true
    cmds:
      - mkdir -p output
      - go test -race -count=1 -coverprofile=output/coverage.out -covermode=atomic -tags=integration -timeout=15m ./...
      - go tool cover -html=output/coverage.out -o output/coverage.html
      - go tool cover -func=output/coverage.out | grep total
      - 'echo "✓ Coverage: output/coverage.html"'

  test:unit:
    desc: Run unit tests only (fast, no Docker required)
    silent: true
    cmds:
      - mkdir -p output
      - go test -race -count=1 -coverprofile=output/coverage-unit.out -covermode=atomic ./...
      - go tool cover -html=output/coverage-unit.out -o output/coverage-unit.html
      - 'echo "✓ Unit Coverage: output/coverage-unit.html"'

  lint:
    desc: Run golangci-lint
    silent: true
    cmds:
      - golangci-lint run ./...

  check:
    desc: Run all checks (test + lint)
    silent: true
    cmds:
      - task: test
      - task: lint

  tools:
    desc: Install development tools
    silent: true
    cmds:
      - go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
      - go install mvdan.cc/gofumpt@latest
      - echo "✓ Tools installed"

  fmt:
    desc: Format all Go files
    cmds:
      - gofumpt -l -w .

  clean:
    desc: Clean build artifacts
    silent: true
    cmds:
      - rm -rf dist output
